---
const {
  topper,
  title,
  text,
  serviceOneTitle,
  serviceOneText,
  serviceOneIcon,
  serviceOneIconAlt,
  serviceOneLink,
  serviceOneLinkText,
  serviceOneImage,
  serviceOneImageAlt,
  serviceTwoTitle,
  serviceTwoText,
  serviceTwoIcon,
  serviceTwoIconAlt,
  serviceTwoLink,
  serviceTwoLinkText,
  serviceTwoImage,
  serviceTwoImageAlt,
  serviceThreeTitle,
  serviceThreeText,
  serviceThreeIcon,
  serviceThreeIconAlt,
  serviceThreeLink,
  serviceThreeLinkText,
  serviceThreeImage,
  serviceThreeImageAlt,
} = Astro.props;
---


<!-- ============================================ -->
<!--                  Services                    -->
<!-- ============================================ -->

<section id="services-942">
  <div class="cs-container">
      <!-- Left Content Section-->
      <div class="cs-content">
          <span class="cs-topper">{topper}</span>
          <h2 class="cs-title">{title}</h2>
          <p class="cs-text">
              {text}
          </p>
      </div>
      <ul class="cs-card-group">
          <li class="cs-item">
              <picture class="cs-icon-wrapper">
                  <img class="cs-icon" loading="lazy" decoding="async" src={serviceOneIcon} alt={serviceOneIconAlt} width="40" height="40">
              </picture>
              <h3 class="cs-h3">{serviceOneTitle}</h3>
              <p class="cs-item-text">
                  {serviceOneText}
              </p>
              <a href={serviceOneLink} class="cs-link">{serviceOneLinkText}</a>
              <!--Background Image-->
              <picture class="cs-background">
                  <img loading="lazy" decoding="async" src={serviceOneImage} alt={serviceOneImageAlt} width="480" height="425">
              </picture>
          </li>
          <li class="cs-item">
              <picture class="cs-icon-wrapper">
                  <img class="cs-icon" loading="lazy" decoding="async" src={serviceTwoIcon} alt={serviceTwoIconAlt} width="40" height="40">
              </picture>
              <h3 class="cs-h3">{serviceTwoTitle}</h3>
              <p class="cs-item-text">
                  {serviceTwoText}
              </p>
              <a href={serviceTwoLink} class="cs-link">{serviceTwoLinkText}</a>
              <!--Background Image-->
              <picture class="cs-background">
                  <img loading="lazy" decoding="async" src={serviceTwoImage} alt={serviceTwoImageAlt} width="480" height="425">
              </picture>
          </li>
          <li class="cs-item">
              <picture class="cs-icon-wrapper">
                  <img class="cs-icon" loading="lazy" decoding="async" src={serviceThreeIcon} alt={serviceThreeIconAlt} width="40" height="40">
              </picture>
              <h3 class="cs-h3">{serviceThreeTitle}</h3>
              <p class="cs-item-text">
                  {serviceThreeText}
              </p>
              <a href={serviceThreeLink} class="cs-link">{serviceThreeLinkText}</a>
              <!--Background Image-->
              <picture class="cs-background">
                  <img loading="lazy" decoding="async" src={serviceThreeImage} alt={serviceThreeImageAlt} width="480" height="425">
              </picture>
          </li>
      </ul>
  </div>
  <!--Waves Background-->
  <picture class="cs-waves">
      <source media="(max-width: 600px)" srcset="https://csimg.nyc3.cdn.digitaloceanspaces.com/Icons/waves-m.svg">
      <source media="(min-width: 601px)" srcset="https://csimg.nyc3.cdn.digitaloceanspaces.com/Icons/waves.svg">
      <img loading="lazy" decoding="async" src="https://csimg.nyc3.cdn.digitaloceanspaces.com/Icons/waves.svg" alt="waves graphic" width="1920" height="331" aria-hidden="true">
  </picture>
</section>
                              
<style lang="less">
  /*-- -------------------------- -->
<---          Services          -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
    #services-942 {
        padding: var(--sectionPadding);
        position: relative;
        z-index: 1;

        .cs-container {
            width: 100%;
            /* changes to 1280px at tablet */
            max-width: (550/16rem);
            margin: auto;
            display: flex;
            flex-direction: column;
            align-items: center;
            /* 48px - 64px */
            gap: clamp(3rem, 6vw, 4rem);
        }

        .cs-content {
            /* set text align to left if content needs to be left aligned */
            text-align: center;
            width: 100%;
            max-width: (800/16rem);
            display: flex;
            flex-direction: column;
            /* centers content horizontally, set to flex-start to left align */
            align-items: center;
        }

        .cs-title,
        .cs-text {
            max-width: 100%;
        }

        .cs-card-group {
            margin: 0;
            padding: 0;
            width: 100%;
            display: grid;
            grid-template-columns: repeat(12, 1fr);
            /* 16px - 20px */
            gap: clamp(1rem, 2vw, 1.25rem);
        }

        .cs-item {
            width: 100%;
            text-align: center;
            list-style: none;
            /* margin top value to match the negative margin value of the .cs-icon-wrapper */
            margin: (44/16rem) 0 0 0;
            /* 24px - 64px bottom */
            /* 24px - 40px left & right */
            padding: 0 clamp(1.5rem, 4vw, 2.5rem) clamp(1.5rem, 6vw, 4rem);
            background-color: #f7f3ee;
            /* prevents padding and border from affecting height and width */
            box-sizing: border-box;
            grid-column: span 12;
            grid-row: span 1;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            position: relative;
            z-index: 1;

            &:hover {
                .cs-h3 {
                    color: var(--bodyTextColorWhite);
                }
                .cs-item-text {
                    color: var(--bodyTextColorWhite);
                    opacity: 0.9;
                }
                .cs-background {
                    opacity: 1;
                }
            }
        }

        .cs-icon-wrapper {
            width: (88/16rem);
            height: (88/16rem);
            margin: (-44/16rem) 0 (36/16rem) 0;
            background-color: var(--primary);
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .cs-icon {
            width: (40/16rem);
            height: auto;
        }

        .cs-h3 {
            /* 20px - 25px */
            font-size: clamp(1.25rem, 2.5vw, 1.5625rem);
            line-height: 1.2em;
            font-weight: bold;
            margin: 0 0 (12/16rem) 0;
            color: var(--headerColor);
        }

        .cs-item-text {
            /* 14px - 16px */
            font-size: clamp(0.875rem, 1.5vw, 1rem);
            line-height: 1.5em;
            max-width: (300/16rem);
            margin: 0 0 (32/16rem) 0;
            padding: 0;
            color: var(--bodyTextColor);
        }

        .cs-link {
            text-decoration: none;
            font-size: (16/20rem);
            line-height: 1.2em;
            font-weight: bold;
            margin: 0;
            padding: 0;
            color: var(--primary);
            position: relative;
            transition: color 0.3s;

            &:hover {
                color: #fff;
            }

            &:before {
                /* underline */
                content: "";
                width: 100%;
                height: 1px;
                background: currentColor;
                opacity: 1;
                position: absolute;
                display: block;
                bottom: (0/16rem);
                left: 0;
            }
        }

        .cs-background {
            width: 100%;
            height: 100%;
            opacity: 0;
            display: block;
            position: absolute;
            top: 0;
            left: 0;
            z-index: -1;
            transition: opacity 0.3s;

            &:before {
                /* background color overlay */
                content: "";
                position: absolute;
                display: block;
                height: 100%;
                width: 100%;
                background: #1a1a1a;
                opacity: 0.84;
                top: 0;
                left: 0;
                z-index: 1;
            }

            img {
                position: absolute;
                top: 0;
                left: 0;
                height: 100%;
                width: 100%;
                /* Makes img tag act as a background image */
                object-fit: cover;
            }
        }

        .cs-waves {
            width: 100%;
            height: (222/16rem);
            background-color: var(--primary);
            position: absolute;
            bottom: 0;
            left: 0;
            z-index: -1;

            img {
                width: 100%;
                height: 100%;
                object-fit: cover;
                position: absolute;
                top: 0;
                left: 0;
            }
        }
    }
}

/* Tablet - 768px */
@media only screen and (min-width: 48rem) {
    #services-942 {
        .cs-container {
            max-width: (1280/16rem);
        }

        .cs-item {
            grid-column: span 4;
        }
    }
}

                                
</style>